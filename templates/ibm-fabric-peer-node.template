{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates a single IBM Blockchain Peer in an existing VPC infrastructure.  **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Software License Agreement"
                    },
                    "Parameters": [
                        "LicenseAgreement"
                    ]
                },
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCID",
                        "AvailabilityZone",
                        "SubnetID"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "InstanceType",
                        "KeyPairName",
                        "SecurityGroup"
                    ]
                },
                {
                    "Label": {
                        "default": "IBM Blockchain Configuration"
                    },
                    "Parameters": [
                        "IBMBlockchainVersion",
                        "StateDatabase",
                        "PeerVolumeSize",
                        "EnrollID",
                        "EnrollSecret",
                        "CAUrl",
                        "CAName",
                        "TLSCAName",
                        "CATLSCertificateChain",
                        "MspID"
                    ]
                },
                {
                    "Label": {
                        "default": "Docker Login"
                    },
                    "Parameters": [
                        "DockerID",
                        "DockerPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "LicenseAgreement": {
                    "default": "License agreement"
                },
                "IBMBlockchainVersion": {
                    "default": "IBM Blockchain Version"
                },
                "StateDatabase": {
                    "default": "Type of state database"
                },
                "PeerVolumeSize": {
                    "default": "Peer volume size"
                },
                "EnrollID": {
                    "default": "Peer enroll ID"
                },
                "EnrollSecret": {
                    "default": "Peer enroll secret"
                },
                "CAUrl": {
                    "default": "Certificate Authority (CA) URL"
                },
                "CAName": {
                    "default": "Enrollment Certificate Authority (CA) Name"
                },
                "TLSCAName": {
                    "default": "TLS Certificate Authority (CA) Name"
                },
                "CATLSCertificateChain": {
                    "default": "Certificate Authority (CA) TLS Certificate Chain"
                },
                "MspID": {
                    "default": "Organization MSP"
                },
                "DockerID": {
                    "default": "Docker ID"
                },
                "DockerPassword": {
                    "default": "Password"
                }
            }
        }
    },
    "Parameters": {
        "LicenseAgreement": {
            "Description": "I have read and agree to the license terms for IBM Blockchain Platform (http://ibm.biz/BdY3AY).",
            "Type": "String",
            "AllowedValues": [
                "I agree",
                "-"
            ],
            "Default": "-",
            "ConstraintDescription": "must answer 'I agree'"
        },
        "IBMBlockchainVersion": {
            "Description": "IBM Blockchain version to deploy.",
            "Type": "String",
            "AllowedValues": [
                "1.4.2"
            ],
            "Default": "1.4.2"
        },
        "CAUrl": {
            "Description": "The url for the Fabric Certificate Authority to use for enrolling the peer.",
            "Type": "String",
            "AllowedPattern": "^(https:\/\/)[a-zA-Z0-9-\/.]+((:[0-9]+))?(\/.*\/?)?",
            "ConstraintDescription": "This URL must be a valid https URL"
        },
        "CAName": {
            "Description": "The name of the Fabric Certificate Authority to use for enrolling the peer.",
            "Type": "String",
            "AllowedPattern": ".+",
            "Default": "ca"
        },
        "TLSCAName": {
            "Description": "The name of the Fabric Certificate Authority used to obtain the TLS certificate for the peer.",
            "Type": "String",
            "AllowedPattern": ".+",
            "Default": "tlsca"
        },
        "CATLSCertificateChain": {
            "Description": "PEM-encoded certificate chain which issued the TLS certificate for the Fabric Certificate Authority.",
            "Type": "String"
        },
        "MspID": {
            "Description": "The MSP identifier for the organization to which this peer belongs.",
            "Type": "String",
            "AllowedPattern": ".+"
        },
        "EnrollID": {
            "Description": "The registered ID the peer will use to enroll.",
            "Type": "String",
            "AllowedPattern": ".+"
        },
        "EnrollSecret": {
            "Description": "The secret the peer will use to enroll.",
            "Type": "String",
            "NoEcho": true,
            "AllowedPattern": ".+"
        },
        "StateDatabase": {
            "Description": "The type of database to use for storing blockchain state.  This selection should match the State Database type used by the rest of the network.",
            "Type": "String",
            "AllowedValues": [
                "goleveldb",
                "CouchDB"
            ],
            "Default": "CouchDB"
        },
        "DockerID": {
            "Description": "The Docker ID used to pull images from Docker Hub.",
            "Type": "String",
            "AllowedPattern": ".+"
        },
        "DockerPassword": {
            "Description": "The password associated with Docker ID.",
            "Type": "String",
            "NoEcho": true,
            "AllowedPattern": ".+"
        },
        "KeyPairName": {
            "Description": "Name of an existing EC2 key pair within the AWS region.",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "SecurityGroup": {
            "Description": "ID of an existing EC2 security group within the AWS region; should allow ingress on ports 22, 7051 and optionally 7053.",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "InstanceType": {
            "AllowedValues": [
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m4.16xlarge",
                "m5.large",
                "m5.xlarge",
                "m5.2xlarge",
                "m5.4xlarge",
                "m5.12xlarge",
                "m5.24xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c5.large",
                "c5.xlarge",
                "c5.2xlarge",
                "c5.4xlarge",
                "c5.9xlarge",
                "c5.18xlarge",
                "x1.16xlarge",
                "x1.xlarge",
                "x1e.xlarge",
                "x1e.2xlarge",
                "x1e.4xlarge",
                "x1e.8xlarge",
                "x1e.16xlarge",
                "x1e.32xlarge",
                "i3.large",
                "i3.xlarge",
                "i3.2xlarge",
                "i3.4xlarge",
                "i3.8xlarge",
                "i3.16xlarge",
                "i3.metal"
            ],
            "ConstraintDescription": "Must contain valid instance type",
            "Default": "m4.xlarge",
            "Description": "Type of EC2 instance for the Workload instances",
            "Type": "String"
        },
        "VPCID": {
            "Description": "ID of your existing VPC for deployment.",
            "Type": "AWS::EC2::VPC::Id"
        },
        "AvailabilityZone": {
            "Description": "The Availability Zones in which to deploy the peer node.",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "SubnetID": {
            "Description": "ID of the subnet to use for the peer node.",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PeerVolumeSize": {
            "Type": "Number",
            "Description": "Size of the EBS Volume Size used to store persistent data (ledger, state database, MSP) for the peer in GBs.",
            "Default": 100
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "ibmblockchain",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "quickstart-ibm-fabric/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        }
    },
    "Rules": {
        "KeyPairsNotEmpty": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Not": [
                            {
                                "Fn::EachMemberEquals": [
                                    {
                                        "Fn::RefAll": "AWS::EC2::KeyPair::KeyName"
                                    },
                                    ""
                                ]
                            }
                        ]
                    },
                    "AssertDescription": "All key pair parameters must not be empty"
                }
            ]
        },
        "SubnetInVPC": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Equals": [
                            {
                                "Fn::ValueOf": [
                                    "SubnetID",
                                    "VpcId"
                                ]
                            },
                            {
                                "Ref": "VPCID"
                            }
                        ]
                    },
                    "AssertDescription": "Subnet must be in the VPC"
                }
            ]
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "AMZLINUXHVM201803": "amzn-ami-hvm-2018.03.0.20180622-x86_64-gp2"
            },
            "us-east-2": {
                "AMZLINUXHVM201803": "ami-40142d25"
            },
            "us-east-1": {
                "AMZLINUXHVM201803": "ami-cfe4b2b0"
            },
            "us-west-2": {
                "AMZLINUXHVM201803": "ami-0ad99772"
            },
            "us-west-1": {
                "AMZLINUXHVM201803": "ami-0e86606d"
            },
            "eu-west-3": {
                "AMZLINUXHVM201803": "ami-d50bbaa8"
            },
            "eu-west-2": {
                "AMZLINUXHVM201803": "ami-b2b55cd5"
            },
            "eu-west-1": {
                "AMZLINUXHVM201803": "ami-e4515e0e"
            },
            "eu-central-1": {
                "AMZLINUXHVM201803": "ami-a058674b"
            },
            "ap-northeast-2": {
                "AMZLINUXHVM201803": "ami-ebc47185"
            },
            "ap-northeast-1": {
                "AMZLINUXHVM201803": "ami-9c9443e3"
            },
            "ap-southeast-2": {
                "AMZLINUXHVM201803": "ami-33f92051"
            },
            "ap-southeast-1": {
                "AMZLINUXHVM201803": "ami-ed838091"
            },
            "ca-central-1": {
                "AMZLINUXHVM201803": "ami-03e86a67"
            },
            "ap-south-1": {
                "AMZLINUXHVM201803": "ami-5a8da735"
            },
            "sa-east-1": {
                "AMZLINUXHVM201803": "ami-83d58fef"
            }
        }
    },
    "Resources": {
        "PeerStorageVolume": {
            "Type": "AWS::EC2::Volume",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone"
                },
                "Size": {
                    "Ref": "PeerVolumeSize"
                },
                "VolumeType": "gp2"
            }
        },
        "PeerEIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "PeerEIPAssociation": {
            "Type": "AWS::EC2::EIPAssociation",
            "DependsOn": [
                "PeerEIP",
                "IBMBlockchainPeer"
            ],
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "PeerEIP",
                        "AllocationId"
                    ]
                },
                "InstanceId": {
                    "Ref": "IBMBlockchainPeer"
                }
            }
        },
        "IBMBlockchainPeer": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": [
                "PeerStorageVolume",
                "PeerEIP"
            ],
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "Install": [
                            "pkgs",
                            "docker-config",
                            "docker-login",
                            "ibmblockchain-images",
                            "script-files",
                            "config-scripts",
                            "launch-peer"
                        ]
                    },
                    "pkgs": {
                        "packages": {
                            "yum": {
                                "aws-cli": [],
                                "jq": []
                            }
                        }
                    },
                    "docker-config": {
                        "packages": {
                            "yum": {
                                "docker": []
                            }
                        },
                        "commands": {
                            "start": {
                                "command": "service docker start"
                            },
                            "add-user": {
                                "command": "usermod -aG docker ec2-user"
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "docker": {
                                    "enabled": "true",
                                    "ensureRunning": "true"
                                }
                            }
                        }
                    },
                    "docker-login": {
                        "commands": {
                            "dockerlogin": {
                                "command": {
                                    "Fn::Sub": "docker login -u ${DockerID} -p ${DockerPassword}"
                                }
                            },
                            "dockerversion": {
                                "command": "docker version"
                            }
                        }
                    },
                    "ibmblockchain-images": {
                        "commands": {
                            "baseimage": {
                                "command": {
                                    "Fn::Join": [
                                        ":",
                                        [
                                            "docker pull ibmblockchain/fabric-baseimage",
                                            {
                                                "Ref": "IBMBlockchainVersion"
                                            }
                                        ]
                                    ]
                                }
                            },
                            "baseos": {
                                "command": {
                                    "Fn::Join": [
                                        ":",
                                        [
                                            "docker pull ibmblockchain/fabric-baseos",
                                            {
                                                "Ref": "IBMBlockchainVersion"
                                            }
                                        ]
                                    ]
                                }
                            },
                            "couchdb": {
                                "command": {
                                    "Fn::Join": [
                                        ":",
                                        [
                                            "docker pull ibmblockchain/fabric-couchdb",
                                            {
                                                "Ref": "IBMBlockchainVersion"
                                            }
                                        ]
                                    ]
                                }
                            },
                            "peer": {
                                "command": {
                                    "Fn::Join": [
                                        ":",
                                        [
                                            "docker pull ibmblockchain/fabric-peer",
                                            {
                                                "Ref": "IBMBlockchainVersion"
                                            }
                                        ]
                                    ]
                                }
                            },
                            "ccenv": {
                                "command": {
                                    "Fn::Join": [
                                        ":",
                                        [
                                            "docker pull ibmblockchain/fabric-ccenv",
                                            {
                                                "Ref": "IBMBlockchainVersion"
                                            }
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "script-files": {
                        "files": {
                            "/tmp/sbin/boot_peer.sh": {
                                "source": {
                                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/boot_peer.sh"
                                },
                                "mode": "000755",
                                "owner": "root",
                                "group": "root"
                            },
                            "/tmp/sbin/create_users.sh": {
                                "source": {
                                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/create_users.sh"
                                },
                                "mode": "000755",
                                "owner": "root",
                                "group": "root"
                            },
                            "/tmp/sbin/disk.sh": {
                                "source": {
                                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/disk.sh"
                                },
                                "mode": "000755",
                                "owner": "root",
                                "group": "root"
                            },
                            "/tmp/sbin/tools.sh": {
                                "source": {
                                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/tools.sh"
                                },
                                "mode": "000755",
                                "owner": "root",
                                "group": "root"
                            },
                            "/tmp/sbin/tls.sh": {
                                "source": {
                                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/tls.sh"
                                },
                                "mode": "000755",
                                "owner": "root",
                                "group": "root"
                            },
                            "/opt/ibmblockchain/bin/enroll.sh": {
                                "source": {
                                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/enroll.sh"
                                },
                                "mode": "000755",
                                "owner": "root",
                                "group": "root"
                            }
                        }
                    },
                    "config-scripts": {
                        "commands": {
                            "create_users": {
                                "command": "./tmp/sbin/create_users.sh"
                            },
                            "disk": {
                                "command": "./tmp/sbin/disk.sh"
                            },
                            "tools": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "./tmp/sbin/tools.sh",
                                            {
                                                "Ref": "IBMBlockchainVersion"
                                            }
                                        ]
                                    ]
                                }
                            },
                            "tls": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "./tmp/sbin/tls.sh",
                                            {
                                                "Ref": "PeerEIP"
                                            }
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "launch-peer": {
                        "files": {
                            "/tmp/cachain.pem": {
                                "content": {
                                    "Ref": "CATLSCertificateChain"
                                },
                                "mode": "000755",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "commands": {
                            "boot_peer": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "./tmp/sbin/boot_peer.sh",
                                            {
                                                "Ref": "EnrollID"
                                            },
                                            {
                                                "Ref": "EnrollSecret"
                                            },
                                            {
                                                "Ref": "CAUrl"
                                            },
                                            {
                                                "Ref": "CAName"
                                            },
                                            {
                                                "Ref": "TLSCAName"
                                            },
                                            "/tmp/cachain.pem",
                                            {
                                                "Ref": "MspID"
                                            },
                                            {
                                                "Ref": "StateDatabase"
                                            },
                                            {
                                                "Ref": "IBMBlockchainVersion"
                                            },
                                            {
                                                "Ref": "PeerEIP"
                                            },
                                            {
                                                "Ref": "LicenseAgreement"
                                            }
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMZLINUXHVM201803"
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "Volumes": [
                    {
                        "VolumeId": {
                            "Ref": "PeerStorageVolume"
                        },
                        "Device": "/dev/xvdl"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true",
                            "VolumeSize": "30"
                        }
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "SecurityGroup"
                    }
                ],
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone"
                },
                "SubnetId": {
                    "Ref": "SubnetID"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "MspID"
                                    },
                                    {
                                        "Ref": "EnrollID"
                                    }
                                ]
                            ]
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -x\n",
                                "yum install -y aws-cfn-bootstrap\n",
                                "# Install the files and packages from the metadata\n",
                                "/opt/aws/bin/cfn-init -v ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource IBMBlockchainPeer ",
                                "         --configsets Install ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "# Signal the status from cfn-init\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource IBMBlockchainPeer ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": "PT15M"
                }
            }
        }
    },
    "Outputs": {
        "ExternalEndpoint": {
            "Description": "The public endpoint for the peer.",
            "Value": {
                "Fn::Join": [
                    ":",
                    [
                        {
                            "Fn::GetAtt": [
                                "IBMBlockchainPeer",
                                "PublicDnsName"
                            ]
                        },
                        "7051"
                    ]
                ]
            }
        },
        "PublicDnsName": {
            "Description": "The public hostname for the peer instance.",
            "Value": {
                "Fn::GetAtt": [
                    "IBMBlockchainPeer",
                    "PublicDnsName"
                ]
            }
        },
        "InternalEndpoint": {
            "Description": "The private endpoint for the peer.",
            "Value": {
                "Fn::Join": [
                    ":",
                    [
                        {
                            "Fn::GetAtt": [
                                "IBMBlockchainPeer",
                                "PrivateDnsName"
                            ]
                        },
                        "7051"
                    ]
                ]
            }
        },
        "PrivateDnsName": {
            "Description": "The private hostname for the peer instance.",
            "Value": {
                "Fn::GetAtt": [
                    "IBMBlockchainPeer",
                    "PrivateDnsName"
                ]
            }
        },
        "TLSRootCertificate": {
            "Description": "The SCP URI for copying the root certificate which issued the TLS certificate for the peer.",
            "Value": {
                "Fn::Sub": [
                    "ec2-user@${Host}:/data/ibmblockchain/${EnrollID}/tls/ca.crt",
                    {
                        "Host": {
                            "Fn::GetAtt": [
                                "IBMBlockchainPeer",
                                "PublicDnsName"
                            ]
                        },
                        "EnrollID": {
                            "Ref": "EnrollID"
                        }
                    }
                ]
            }
        }
    }
}